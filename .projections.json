{
  "lib/**/workers/*.ex": {
    "type": "worker",
    "alternate": "test/{dirname}/workers/{basename}_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.Workers.{basename|camelcase|capitalize} do",
      "  use Oban.Worker",
      "",
      "  require Logger",
      "",
      "  @impl Oban.Worker",
      "  def perform(params, _job) do",
      "    :ok",
      "  end",
      "end"
    ]
  },
  "test/**/workers/*_test.exs": {
    "alternate": "lib/{dirname}/views/{basename}_view.ex",
    "type": "test",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.Workers.{basename|camelcase|capitalize}Test do",
      "  use CommcareSync.DataCase",
      "",
      "  alias {dirname|camelcase|capitalize}.Workers.{basename|camelcase|capitalize}, as: Worker",
      "",
      "  test \"perform/2\" do",
      "  end",
      "end"
    ]
  },
  "lib/**/views/live/**/*_component.ex": {
    "type": "view",
    "alternate": "test/{dirname}/views/{basename}_live_component_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}Component do",
      "  use Phoenix.LiveComponent",
      "",
      "  @defaults %{",
      "  }",
      "",
      "  def render(assigns) do",
      "    ~L\"\"\"",
      "      HI",
      "    \"\"\"",
      "  end",
      "",
      "  def mount(socket) do",
      "    {:ok, socket}",
      "  end",
      "",
      "  def update(assigns, socket) do",
      "    {:ok, assign(socket, Map.merge(@defaults, assigns))}",
      "  end",
      "end"
    ]
  },
  "lib/**/live/*_live_view.ex": {
    "type": "view",
    "alternate": "test/{dirname}/views/{basename}_live_view_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}LiveView do",
      "  use Phoenix.LiveView",
      "",
      "  def render(assigns) do",
      "    ~L\"\"\"",
      "      HI",
      "    \"\"\"",
      "  end",
      "",
      "  def mount(_params, _session, socket) do",
      "    {:ok, socket}",
      "  end",
      "end"
    ]
  },
  "lib/**/views/*_view.ex": {
    "type": "view",
    "alternate": "test/{dirname}/views/{basename}_view_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}View do",
      "  use {dirname|camelcase|capitalize}, :view",
      "end"
    ]
  },
  "test/**/views/*_view_test.exs": {
    "alternate": "lib/{dirname}/views/{basename}_view.ex",
    "type": "test",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}ViewTest do",
      "  use ExUnit.Case, async: true",
      "",
      "  alias {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}View",
      "end"
    ]
  },
  "lib/**/controllers/*_controller.ex": {
    "type": "controller",
    "alternate": "test/{dirname}/controllers/{basename}_controller_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}Controller do",
      "  use {dirname|camelcase|capitalize}, :controller",
      "end"
    ]
  },
  "test/**/controllers/*_controller_test.exs": {
    "alternate": "lib/{dirname}/controllers/{basename}_controller.ex",
    "type": "test",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}ControllerTest do",
      "  use {dirname|camelcase|capitalize}.ConnCase, async: true",
      "end"
    ]
  },
  "lib/**/channels/*_channel.ex": {
    "type": "channel",
    "alternate": "test/{dirname}/channels/{basename}_channel_test.exs",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}Channel do",
      "  use {dirname|camelcase|capitalize}, :channel",
      "end"
    ]
  },
  "test/**/channels/*_channel_test.exs": {
    "alternate": "lib/{dirname}/channels/{basename}_channel.ex",
    "type": "test",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}ChannelTest do",
      "  use {dirname|camelcase|capitalize}.ChannelCase, async: true",
      "",
      "  alias {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}Channel",
      "end"
    ]
  },
  "test/**/features/*_test.exs": {
    "type": "feature",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}Test do",
      "  use {dirname|camelcase|capitalize}.FeatureCase, async: true",
      "end"
    ]
  },
  "test/**/integrations/*_integration_test.exs": {
    "type": "integration",
    "template": [
      "defmodule {dirname|camelcase|capitalize}.{basename|camelcase|capitalize}IntegrationTest do",
      "  use CommcareSyncWeb.IntegrationCase",
      "end"
    ]
  },
  "lib/*.ex": {
    "alternate": "test/{}_test.exs",
    "type": "source",
    "template": ["defmodule {camelcase|capitalize|dot} do", "end"]
  },
  "test/*_test.exs": {
    "alternate": "lib/{}.ex",
    "type": "test",
    "template": [
      "defmodule {camelcase|capitalize|dot}Test do",
      "  use ExUnit.Case, async: true",
      "",
      "  alias {camelcase|capitalize|dot}",
      "end"
    ]
  }
}
