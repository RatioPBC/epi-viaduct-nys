use Mix.Config

config :ex_aws,
  session_token: [{:system, "AWS_SESSION_TOKEN"}, {:awscli, System.get_env("AWS_PROFILE"), 30}, :instance_role]

# Configure your database
repo_opts =
  if socket_dir = System.get_env("PGDATA") do
    [socket_dir: socket_dir]
  else
    [url: System.get_env("DATABASE_URL", "postgres://postgres@localhost/nys_etl_dev")]
  end

config :nys_etl, NYSETL.Repo, [database: "nys_etl_dev", show_sensitive_data_on_connection_error: true, pool_size: 20] ++ repo_opts

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.
config :nys_etl, NYSETLWeb.Endpoint,
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  http: [port: 4000],
  server: true,
  url: [host: {:system, "CANONICAL_HOST"}, port: {:system, "PORT"}],
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/nys_etl_web/(live|views)/.*(ex)$",
      ~r"lib/nys_etl_web/templates/.*(eex)$"
    ]
  ],
  watchers: [
    node: [
      "node_modules/webpack/bin/webpack.js",
      "--mode",
      "development",
      "--watch-options-stdin",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

config :nys_etl,
  cloudwatch_metrics_enabled: false,
  county_list: [
    %{
      "analysis_date" => "2020-05-24 00:00:00",
      "county_display" => "Staging",
      "county_name" => "staging",
      "county_sort" => "zz_staging",
      "domain" => "ny-staging-cdcms",
      "fips" => "600",
      "gaz" => "",
      "is_state_domain" => "",
      "location_id" => "d87c0134be3c401bb14e6c4420b7a178",
      "participating" => "yes"
    }
  ],
  start_viaduct_workers: false

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :nys_etl, :basic_auth,
  dashboard_username: System.get_env("DASHBOARD_USERNAME"),
  dashboard_password: System.get_env("DASHBOARD_PASSWORD")

config :logger, :debug_log_file,
  path: "log/debug.log",
  level: :debug

config :logger, :info_log_file,
  path: "log/info.log",
  level: :info

config :logger, :error_log_file,
  path: "log/error.log",
  level: :warn

config :logger, :console, format: "[$level] $message\n"
config :logger, level: :info

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
